---
- hosts: "{{ old_hostname }}"
  become: true
  vars_files:
   group_vars/vars.yml
  tasks:

    - name: "Get PSK key"
      shell: "cat /etc/zabbix/zabbix_agentd.psk"
      register:  psk_key
    - debug: var=psk_key

- hosts: management
  gather_facts: yes
  become: true
  vars_files:
   group_vars/vars.yml

  tasks:
  # 1 - 3. Run api to update hostname confguration
  - name: "change server roles"
    change_server_roles:
      old_server: "{{ old_hostname }}"
      new_server: "{{ new_hostname }}"
      role: "master"
    with_items:
      - master
      - quarantine
      - logging
      - archive_master
      - filter

  - name: "Get host groups list"
    get_host_groups:
      host: "{{ new_hostname }}"
    register:  group_list
  - debug: var=group_list

  - name: "Get host templates list"
    get_host_templates:
      host: "{{ new_hostname }}"
    register:  templates_list
  - debug: var=templates_list

  - name: "Update Host Group and Templates"
    local_action:
      module: zabbix_host
      server_url: https://monitor.seinternal.com
      login_user:        "{{ username }}"
      login_password:    "{{ password }}"
      host_name:     "{{ new_hostname }}"
      visible_name:  "{{ new_hostname }}"
      host_groups: "{{ group_list.meta }}"
      link_templates: "{{ templates_list.meta }}"
      status: enabled
      state: present
      interfaces:
        - type:  1
          main:  1
          useip: 1
          ip: "{{ hostvars[old_hostname]['ansible_default_ipv4']['address'] }}"
          dns: "{{ new_hostname }}"
          port: 10050
      tls_psk_identity: "{{ new_hostname }}_001"
      tls_connect: 2
      tls_psk: "{{ hostvars[old_hostname]['psk_key']['stdout'] }}"
      tls_accept:  2

  - name: "Update Host Group and Templates"
    local_action:
      module: zabbix_host
      server_url: https://monitor.seinternal.com
      login_user:        "{{ username }}"
      login_password:    "{{ password }}"
      host_name:     "{{ old_hostname }}"
      visible_name:  "{{ old_hostname }}"
      host_groups: "{{ group_list.meta }}"
      link_templates: "{{ templates_list.meta }}"
      status: enabled
      state: absent
      interfaces:
        - type:  1
          main:  1
          useip: 1
          ip: "{{ hostvars[old_hostname]['ansible_default_ipv4']['address'] }}"
          dns: ""
          port: 10050
        - type: 4
          main: 1
          useip: 1
          ip: "{{ hostvars[old_hostname]['ansible_default_ipv4']['address'] }}"
          dns: ""
          port: 10050

- hosts: webservers
  gather_facts: yes
  become: true
  vars_files:
   group_vars/vars.yml

  tasks:
# Prerequisites for ansible run and python libraries
  - name: Install python-pip package
    become: true
    apt:
      name: "{{ item }}"
      state: present
      update_cache: yes
    with_items:
    - python-pip

  - name: Install pip prerequisites
    pip:
      name: "{{ item }}"
    with_items:
    - requests
    - mysql-connector

# Removing the immuable flag on the /etc/hosts and /etc/hostname
  - name: Removing the immuable flag temporary
    shell: "chattr -i /etc/hosts /etc/hostname"

# Replace the old host with new in the server
  - name: Replace old hostname
    replace:
      path: "{{ item }}"
      regexp:  "{{ old_hostname }}"
      replace: "{{ new_hostname }}"
    with_items:
    - /etc/hostname
    - /etc/hosts
    - /root/salt_setup/pillar/data.sls
    - /etc/spamexperts/cluster.conf

# Adding back the immuable flah on the /etc/hosts /etc/hostname
  - name: Adding back the immuable flag
    shell: "chattr +i /etc/hosts /etc/hostname"

# Change hostname in ENV
  - name: Shell command for new hostnam
    shell: "hostname {{new_hostname}}"

# 5. Run the updater
  - name: Run the updater
    shell: "/home/spamexperts/update/update -d --skip-wait-turn --skip-version-check
    --skip-apt --skip-restart --skip-cron --skip-applications --skip-pip --skip-pip-cache --skip-preupdate
    --skip-postupdate --skip-salt --skip-preupdate-migrations --skip-postupdate-migrations"

# Adding scripts to current path
  - template:
      src:  "{{ item }}.j2"
      dest: /root/{{ item }}
      mode: 0777
    with_items:
      - update_mysql_filter.sql
      - master_script.py

# # Check if master
#   - name: Check if master
#     shell: "source /opt/se-tools/se.functions && se-is-master"
#     register: is_master
#     failed_when: is_master != 1 and is_master != 0

# Run the mysql script
  - mysql_db:
      state: import
      name: all
      target: /root/update_mysql_filter.sql

# 10. Run python script to generate and update api user password for database using the new hostname as starting point
  - name: Running python script
    shell: python /root/master_script.py
    ignore_errors: true

# Rename zabbix key in /etc/zabbix/zabbix_agend.conf
  - name: Rename zabbix key in conf file
    replace:
      path: /etc/zabbix/zabbix_agentd.conf
      regexp:  "{{ old_hostname }}"
      replace: "{{ new_hostname }}"

# 11. Restart services so that the configuration loads with new hostname
  - name: Services restart
    service:
      name: "{{ item }}"
      state: restarted
    with_items:
      - exim4
      - pdns-recursor
      - exim4
      - exim4-outgoing
      - cron
      - zabbix-agent
      - dovecot
      - nginx
      - watch_imap
    ignore_errors: true
