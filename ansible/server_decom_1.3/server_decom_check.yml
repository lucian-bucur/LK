---
- hosts: webservers
  become: True
  vars_files:
       group_vars/vars.yml
  vars:
       dict: {}
  tasks:
  - name: "Check the server roles"
    include: tasks/check_server_role.yml
    register: server_role_out
    with_items:
      - quarantine
      - logging
      - archive_master

  # Step 1.b Check for the SOCKS support for this server on ansible_all_ipv4_addresses.
  - name: "Check socks support on this server"
    include: tasks/check_socks.yml
    register: socks_check_output
    with_nested:
      - "{{ ansible_all_ipv4_addresses }}"
      - "{{ ansible_all_ipv6_addresses }}"

  # Step 2. Add results to reports
  - name: "Check that server ipv4 address is not listed in the domains array"
    change_reports:
       domains:    "{{ domain_servers }}"
       interfaces: "{{ ansible_all_ipv4_addresses }}"
    register: reports

  # Verify in debug mode that server is not used for quarantine and archive and loggin and also the logs for those are empty
  - name: "Verify in debug mode that indeed the quarantine and logging and archive are empty"
    shell: "{{ spamexpert_path }}migrate_exim_data/migrate_exim_data -d"
    register: exim_data
    #failed_when: '"Processing 0 domains" not in exim_data.stderr_lines'
    ignore_errors: true

  - debug:
      msg: "The exim_data is {{ exim_data }}"

  - template:
      src: "{{ item }}.j2"
      dest: /root/{{ item }}
    with_items:
      - query_inc.sql
      - query_out.sql

  - name: "Check for incoming exim messages"
    mysql_db:
      state: import
      name: filter_local
      target: /root/query_inc.sql
    register: incoming_messages

  - debug:
      msg: "The exim_data is {{ incoming_messages }}"

  - name: "Check for incoming exim messages"
    mysql_db:
      state: import
      name: filter_local
      target: /root/query_inc.sql
    register: outgoing_messages

  - debug:
      msg: "The exim_data is {{ outgoing_messages }}"

  #
  # - name: "Check that the server migration exim logs status"
  #   shell: "{{ spamexpert_path }}migrate_exim_data/migrate_exim_data -d"
  #   register: exim_logs
  #
  # - name: "Check that the server migration quarantine status"
  #   shell: "{{ spamexpert_path }}migrate_quarantine/migrate -d"
  #   register: exim_quarantine
  #
  # - name: "Check that the server migration archive logs status"
  #   shell: "{{ spamexpert_path }}process_archive_queue/process_queue local-scan-queue -d"
  #   register: exim_archive_logs
  #
  # - name: "Check to see if there any outgoing traffic on the mx server"
  #   shell: "exim -C /var/lib/exim4/outgoing-config.autogenerated -bpc"
  #   register: exim_traffic
  #
  # - name: "Creating a kind of report"
  #   set_stats:
  #     data: { server_role_out, socks_check_output, exim_data, exim_logs, exim_quarantine, exim_archive_logs, exim_traffic}
  #     per_host: True
  #     aggregate: True

  # - name: export 1
  #   set_fact:
  #       dict: "{{ dict | combine(reports.value) }}"

  # Step 3. Check that the ipv6 of the server is not listed in the domains array.
  # - name: "Check that server ipv6 address is not listed in the domains array"
  #   change_reports:
  #      domains:    "{{ domain_servers }}"
  #      interfaces: "{{ ansible_all_ipv6_addresses }}"
  #   register: reports
  #
  # - name: export 2
  #   set_fact:
  #       dict: "{{ dict | combine(reports.value) }}"
  #
  # - debug: var=dict
  # - copy: content="{{ dict }}" dest="/tmp/{{ inventory_hostname }}_reports"
