- name:  register cluster name
  set_fact:
    cluster: "{{ old_server.partition('.')[2] }}"
- name:  register domain name
  set_fact:
    domain_name: "{{ item }}"
- name:  register table name
  set_fact:
    table: "{{ domain_name | replace('.','_') }}"

- name: register logging_server
  set_fact:
     logging_server: "{{ hostvars['access.seinternal.com']['logging_filters'][domain_name] }}"
- debug: var=logging_server

- set_fact:
    report:
      cluster: "{{ cluster }}"
      domain_name: "{{ domain_name }}"
      table: "{{ table}}"
- debug: var=report
  when: logging_server == old_server

- name: "Check tables from the logging source_server"
  command: mysql -e "SHOW TABLES LIKE '{{ table }}'" '{{ index }}'
  when: logging_server == old_server
  loop:
    - mx_messages
  loop_control:
       loop_var: index
  register: check

- debug: var=check.results[0]['rc']

- name: "Remove data from the logging source_server"
  command: mysql -e "truncate table {{ table }}" '{{ index }}'
  when: logging_server == old_server and check.results[0]['rc'] == 0
  loop:
    - mx_messages
    - mx_messages_outgoing
  loop_control:
       loop_var: index
